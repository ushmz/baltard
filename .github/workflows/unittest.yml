# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  # push:
  #   branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      MYSQL_HOST: ${{secrets.MYSQL_HOST}}
      MYSQL_PORT: ${{secrets.MYSQL_PORT}}
      MYSQL_USER: ${{secrets.MYSQL_USER}}
      MYSQL_PASS: ${{secrets.MYSQL_PASS}}
      MYSQL_DBNAME: ${{secrets.MYSQL_DBNAME}}

    services:
      db:
        image: mysql:8.0
        ports:
          - 3366:3306
        env:
          MYSQL_ROOT_PASSWORD: ${{secrets.MYSQL_PASS}}
          MYSQL_DATABASE: ${{secrets.MYSQL_DBNAME}}
          MYSQL_USER: ${{secrets.MYSQL_USER}}
          MYSQL_PASSWORD: ${{secrets.MYSQL_PASS}}
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - 
        uses: actions/checkout@v2
      - 
        name: Setup Go environment
        uses: actions/setup-go@v2.1.5
        with:
          go-version: 1.16
      -
        name: module cache check
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - 
        name: Get dependencies
        run: go get -v -t -d ./...
        working-directory: ./app
      -
        name: Insert test data into DB
        run: |
          for file in *
          do
            mysql --protocol=tcp -h localhost -P ${{secrets.MYSQL_PORT}} -u root -p${{secrets.MYSQL_PASS}} ${{secrets.MYSQL_DBNAME}} < $file
          done
        working-directory: ./db/mysql/init.d
      - 
        name: Test infrastructure layer code
        run: go test ./src/infra/...
        working-directory: ./app
      - 
        name: Test usecase layer code
        run: go test ./src/usecase/...
        working-directory: ./app
      - 
        name: Test handler layer code
        run: go test ./src/handler/...
        working-directory: ./app
