// Code generated by MockGen. DO NOT EDIT.
// Source: user.go

// Package mock_authentication is a generated GoMock package.
package mock_authentication

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockUserAuthentication is a mock of UserAuthentication interface.
type MockUserAuthentication struct {
	ctrl     *gomock.Controller
	recorder *MockUserAuthenticationMockRecorder
}

// MockUserAuthenticationMockRecorder is the mock recorder for MockUserAuthentication.
type MockUserAuthenticationMockRecorder struct {
	mock *MockUserAuthentication
}

// NewMockUserAuthentication creates a new mock instance.
func NewMockUserAuthentication(ctrl *gomock.Controller) *MockUserAuthentication {
	mock := &MockUserAuthentication{ctrl: ctrl}
	mock.recorder = &MockUserAuthenticationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserAuthentication) EXPECT() *MockUserAuthenticationMockRecorder {
	return m.recorder
}

// DeleteUser mocks base method.
func (m *MockUserAuthentication) DeleteUser(externalID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteUser", externalID)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteUser indicates an expected call of DeleteUser.
func (mr *MockUserAuthenticationMockRecorder) DeleteUser(externalID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteUser", reflect.TypeOf((*MockUserAuthentication)(nil).DeleteUser), externalID)
}

// GenerateSessionCookie mocks base method.
func (m *MockUserAuthentication) GenerateSessionCookie(externalID string, expiresIn time.Duration) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateSessionCookie", externalID, expiresIn)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateSessionCookie indicates an expected call of GenerateSessionCookie.
func (mr *MockUserAuthenticationMockRecorder) GenerateSessionCookie(externalID, expiresIn interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateSessionCookie", reflect.TypeOf((*MockUserAuthentication)(nil).GenerateSessionCookie), externalID, expiresIn)
}

// GenerateToken mocks base method.
func (m *MockUserAuthentication) GenerateToken(externalID string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateToken", externalID)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateToken indicates an expected call of GenerateToken.
func (mr *MockUserAuthenticationMockRecorder) GenerateToken(externalID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateToken", reflect.TypeOf((*MockUserAuthentication)(nil).GenerateToken), externalID)
}

// RegisterUser mocks base method.
func (m *MockUserAuthentication) RegisterUser(externalID, secret string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RegisterUser", externalID, secret)
	ret0, _ := ret[0].(error)
	return ret0
}

// RegisterUser indicates an expected call of RegisterUser.
func (mr *MockUserAuthenticationMockRecorder) RegisterUser(externalID, secret interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterUser", reflect.TypeOf((*MockUserAuthentication)(nil).RegisterUser), externalID, secret)
}

// RevokeToken mocks base method.
func (m *MockUserAuthentication) RevokeToken(externalID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RevokeToken", externalID)
	ret0, _ := ret[0].(error)
	return ret0
}

// RevokeToken indicates an expected call of RevokeToken.
func (mr *MockUserAuthenticationMockRecorder) RevokeToken(externalID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RevokeToken", reflect.TypeOf((*MockUserAuthentication)(nil).RevokeToken), externalID)
}
